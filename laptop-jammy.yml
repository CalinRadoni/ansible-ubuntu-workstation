---

#
# Notes:
#
# For type tests see: https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_tests.html#type-tests
#
# Tags:
#
# - install
# - user_config
# - system_config
#
# Example usage:
#
# ansible-playbook --ask-become-pass -i inventories/production/laptop.yml laptop-jammy.yml
# ansible-playbook --ask-become-pass -i inventories/production/laptop.yml --skip-tags user_config laptop-jammy.yml
# ansible-playbook --ask-become-pass -i inventories/production/laptop.yml --skip-tags install laptop-jammy.yml
#
# ansible-playbook --user=ubuntu --ask-pass --ask-become-pass -i inventories/example/hosts.yml --limit=laptop2 laptop-jammy.yml

- name: 'Ansible for Ubuntu configuration'
  hosts: all

  vars:
    simple_roles:
      - common
      # - clamav
      # - podman
      # - python
      # - vim
      # - teams_insiders
      # - lxd_simple

    x_roles:
      # - debug_user_settings
      - setuser
      # - keyboard
      # - git
      # - vscode
      # - dconf

  tasks:

    - name: System (user independent) roles
      include_role:
        name: "{{ simple_role }}"
      loop_control:
        loop_var: simple_role
      loop: "{{ simple_roles if
                  simple_roles is defined and simple_roles is iterable and
                  simple_roles is not string and simple_roles is not mapping and
                  simple_roles | length > 0
                  else [] }}"
      tags: install

    - name: Load user settings
      ansible.builtin.include_tasks:
        file: tasks/load_user_info.yml
      loop_control:
        loop_var: file_name
      loop: "{{ userlist if
                  userlist is defined and userlist is iterable and
                  userlist is not string and userlist is not mapping and
                  userlist | length > 0
                  else [] }}"
      tags: user_config

    - name: User dependent roles
      include_role:
        name: "{{ x_role }}"
      vars:
        x_user: "{{ xur.0 }}"
        x_role: "{{ xur.1 }}"
      loop_control:
        loop_var: xur
      loop: "{{ (user_settings | product(x_roles) | list) if
                user_settings is defined and user_settings is iterable and
                user_settings is not string and user_settings is not mapping and
                user_settings | length > 0 and
                x_roles is defined and x_roles is iterable and
                x_roles is not string and x_roles is not mapping and
                x_roles | length > 0
                else [] }}"
      tags: user_config
